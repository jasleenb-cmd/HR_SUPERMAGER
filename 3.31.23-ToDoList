import tkinter as tk
from tkinter import ttk, messagebox
from datetime import datetime

scheduled_events = []


def login():
    global entry_username, entry_password
    username = entry_username.get()
    password = entry_password.get()

    if username == "hr_head" and password == "cyber17":
        messagebox.showinfo("Login Success", "Welcome to the HR Application!")
        root.destroy()
        create_dashboard()
    else:
        messagebox.showerror("Login Failed", "Invalid username or password")


def add_event():
    global entry_event_name, entry_event_date, entry_event_time, event_list
    event_name = entry_event_name.get()
    event_date = entry_event_date.get()
    event_time = entry_event_time.get()

    if event_name and event_date and event_time:
        scheduled_events.append((event_name, event_date, event_time))
        update_event_list()
        entry_event_name.delete(0, 'end')
        entry_event_date.delete(0, 'end')
        entry_event_time.delete(0, 'end')
    else:
        messagebox.showwarning("Missing Information",
                               "Please enter all required fields.")


def update_event_list():
    global event_list
    event_list.delete(0, 'end')
    for event in scheduled_events:
        event_list.insert('end', f"{event[0]} - {event[1]} - {event[2]}")


def create_dashboard():
    global entry_event_name, entry_event_date, entry_event_time, event_list

    dashboard = tk.Tk()
    dashboard.title("HR Dashboard")

    notebook = ttk.Notebook(dashboard)

    # Scheduling tab
    scheduling_frame = ttk.Frame(notebook)
    notebook.add(scheduling_frame, text="Memo")

    ttk.Label(scheduling_frame, text="Event Name:").grid(row=0, column=0,
                                                         sticky="e")
    entry_event_name = tk.Entry(scheduling_frame)
    entry_event_name.grid(row=0, column=1)

    ttk.Label(scheduling_frame, text="Event Date (YYYY-MM-DD):").grid(row=1,
                                                                      column=0,
                                                                      sticky="e")
    entry_event_date = tk.Entry(scheduling_frame)
    entry_event_date.grid(row=1, column=1)

    ttk.Label(scheduling_frame, text="Event Time (HH:MM):").grid(row=2,
                                                                 column=0,
                                                                 sticky="e")
    entry_event_time = tk.Entry(scheduling_frame)
    entry_event_time.grid(row=2, column=1)

    button_add_event = tk.Button(scheduling_frame, text="Add Event",
                                 command=add_event)
    button_add_event.grid(row=3, column=0, columnspan=2, pady=10)

    event_list = tk.Listbox(scheduling_frame, height=10, width=50)
    event_list.grid(row=4, column=0, columnspan=2)
    update_event_list()

    # Schedule tab
    training_frame = ttk.Frame(notebook)
    notebook.add(training_frame, text="Schedule")
    ttk.Label(training_frame, text="Schedule Content").grid(row=0, column=0)

    # Payroll tab
    payroll_frame = ttk.Frame(notebook)
    notebook.add(payroll_frame, text="Payroll")
    ttk.Label(payroll_frame, text="Payroll Content").grid(row=0, column=0)

    # Training tab
    training_frame = ttk.Frame(notebook)
    notebook.add(training_frame, text="Training")
    ttk.Label(training_frame, text="Training Content").grid(row=0, column=0)

    notebook.pack(expand=True, fill="both")
    dashboard.mainloop()


root = tk.Tk()
root.title("HR Application Login")
frame = tk.Frame(root)
frame.pack(padx=20, pady=20)

label_username = tk.Label(frame, text="Username:")
label_username.grid(row=0, column=0, sticky="e")
entry_username = tk.Entry(frame)
entry_username.grid(row=0, column=1)

label_password = tk.Label(frame, text="Password:")
label_password.grid(row=1, column=0, sticky="e")
entry_password = tk.Entry(frame, show="*")
entry_password.grid(row=1, column=1)

button_login = tk.Button(frame, text="Login", command=login)
button_login.grid(row=2, column=0, columnspan=2, pady=10)

root.mainloop()
