# FIRST FRAME LOGIN PAGE AND USER CREATION
# CREATE NEW USER OPENS NEW WINDOW IN ORDER FOR USER TO BE CREATED 
# ONCE USER IS CREATED THEY CAN BE LOGGED IN

import tkinter as tk


def login():
    # Check if the username and password are correct
    username = username_entry.get()
    password = password_entry.get()

    if username in users and users[username] == password:
        # If the credentials are correct, close the login window and open the HR app
        login_window.destroy()
        hr_app_window = tk.Tk()
        hr_app_window.title("HR App")

        # Create the dashboard with buttons for schedule, payroll, and training
        schedule_button = tk.Button(hr_app_window, text="Schedule")
        schedule_button.pack(padx=10, pady=10)

        payroll_button = tk.Button(hr_app_window, text="Payroll")
        payroll_button.pack(padx=10, pady=10)

        training_button = tk.Button(hr_app_window, text="Training")
        training_button.pack(padx=10, pady=10)

        # Add widgets to the HR app window here

        # Run the HR app window
        hr_app_window.mainloop()
    else:
        # If the credentials are incorrect, show an error message
        error_label.config(text="Invalid username or password")


def create_user():
    # Get the new username and password
    username = username_entry.get()
    password = password_entry.get()

    if username in users:
        # If the username already exists, show an error message
        error_label.config(text="Username already exists")
    else:
        # Add the new user to the users dictionary
        users[username] = password

        # Clear the entry fields
        username_entry.delete(0, tk.END)
        password_entry.delete(0, tk.END)

        # Show a success message
        error_label.config(text="User created successfully")


# Create the login window
login_window = tk.Tk()
login_window.title("HR App Login")

# Add widgets to the login window
username_label = tk.Label(login_window, text="Username:")
username_label.grid(row=0, column=0, padx=5, pady=5)

username_entry = tk.Entry(login_window)
username_entry.grid(row=0, column=1, padx=5, pady=5)

password_label = tk.Label(login_window, text="Password:")
password_label.grid(row=1, column=0, padx=5, pady=5)

password_entry = tk.Entry(login_window, show="*")
password_entry.grid(row=1, column=1, padx=5, pady=5)

login_button = tk.Button(login_window, text="Login", command=login)
login_button.grid(row=2, column=0, padx=5, pady=5)

create_user_button = tk.Button(login_window, text="Create User",
                               command=create_user)
create_user_button.grid(row=2, column=1, padx=5, pady=5)

error_label = tk.Label(login_window, text="")
error_label.grid(row=3, column=0, columnspan=2, padx=5, pady=5)

# Create a dictionary to store the users and passwords
users = {"admin": "password"}

# Run the login window
login_window.mainloop()

